// Generated by CoffeeScript 1.6.3
(function() {
  var app, exec, execPuts, express, fs, lg, redis, rtg, server, sys;

  lg = function() {
    console.log.apply(console, arguments);
  };

  fs = require("fs");

  sys = require('sys');

  exec = require('child_process').exec;

  redis = {};

  if (process.env.REDISTOGO_URL) {
    rtg = require("url").parse(process.env.REDISTOGO_URL);
    redis = require("redis").createClient(rtg.port, rtg.hostname);
    redis.auth(rtg.auth.split(":")[1]);
  } else {
    redis = require("redis").createClient();
  }

  redis.on("error", function(err) {
    console.log("Error " + err);
  });

  execPuts = function(cmd, done) {
    console.log('Executing', cmd);
    return exec(cmd, function(error, stdout, stderr) {
      sys.puts(stderr);
      return done();
    });
  };

  express = require('express');

  app = express();

  app.use(require("body-parser")({
    limit: "5mb"
  }));

  app.get("/hello.txt", function(req, res) {
    res.send("Hello World");
  });

  app.post("/", function(req, res) {
    redis.set("dump", JSON.stringify(req.body));
    return res.send("ok");
  });

  app.get("/", function(req, res) {
    return redis.get("dump", function(err, reply) {
      var all, str;
      if (err) {
        res.statusCode = 404;
        res.send(err);
        return null;
      }
      all = reply ? JSON.parse(reply) : {};
      str = all.all || "{}";
      return res.send(JSON.parse(str));
    });
  });

  server = app.listen(process.env.PORT || 5000, function() {
    console.log("Listening on port %d", server.address().port);
  });

  runCaper(function() {
    return execPuts("casperjs amazonCasper.coffee", function() {
      return lg("casper done");
    });
  });

  setInterval(runCaper, 200000);

  runCaper();

}).call(this);
